package com.mememan.resourcecrops.mods;

import com.mememan.resourcecrops.block.RegisterCrop;
import com.mememan.resourcecrops.lib.*;
import com.mememan.resourcecrops.lib.tex.BlockusTex;
import com.mememan.resourcecrops.lib.tex.ResourceCropsTex;

import static com.mememan.resourcecrops.lib.ingredient.BlockusIngredient.*;

public class Blockus {
	public static void init(){
		if(Mods.checkMod(Mods.Blockus)==true){
			RegisterCrop.addCrop(Mods.Blockus, "asphalt", Crops.ASPHALT, Crops.ASPHALT_ITEM, new String[]{BlockusTex.ASPHALT}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "blue_asphalt", Crops.ASPHALT_BLUE, Crops.ASPHALT_BLUE_ITEM, new String[]{BlockusTex.ASPHALT_BLUE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_BLUE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "brown_asphalt", Crops.ASPHALT_BROWN, Crops.ASPHALT_BROWN_ITEM, new String[]{BlockusTex.ASPHALT_BROWN}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_BROWN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "cyan_asphalt", Crops.ASPHALT_CYAN, Crops.ASPHALT_CYAN_ITEM, new String[]{BlockusTex.ASPHALT_CYAN}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_CYAN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "gray_asphalt", Crops.ASPHALT_GRAY, Crops.ASPHALT_GRAY_ITEM, new String[]{BlockusTex.ASPHALT_GRAY}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_GRAY, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "green_asphalt", Crops.ASPHALT_GREEN, Crops.ASPHALT_GREEN_ITEM, new String[]{BlockusTex.ASPHALT_GREEN}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_GREEN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "light_blue_asphalt", Crops.ASPHALT_LIGHT_BLUE, Crops.ASPHALT_LIGHT_BLUE_ITEM, new String[]{BlockusTex.ASPHALT_LIGHT_BLUE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_LIGHT_BLUE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "light_gray_asphalt", Crops.ASPHALT_LIGHT_GRAY, Crops.ASPHALT_LIGHT_GRAY_ITEM, new String[]{BlockusTex.ASPHALT_LIGHT_GRAY}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_LIGHT_GRAY, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "lime_asphalt", Crops.ASPHALT_LIME, Crops.ASPHALT_LIME_ITEM, new String[]{BlockusTex.ASPHALT_LIME}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_LIME, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "magenta_asphalt", Crops.ASPHALT_MAGENTA, Crops.ASPHALT_MAGENTA_ITEM, new String[]{BlockusTex.ASPHALT_MAGENTA}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_MAGENTA, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "orange_asphalt", Crops.ASPHALT_ORANGE, Crops.ASPHALT_ORANGE_ITEM, new String[]{BlockusTex.ASPHALT_ORANGE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_ORANGE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "pink_asphalt", Crops.ASPHALT_PINK, Crops.ASPHALT_PINK_ITEM, new String[]{BlockusTex.ASPHALT_PINK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_PINK, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "purple_asphalt", Crops.ASPHALT_PURPLE, Crops.ASPHALT_PURPLE_ITEM, new String[]{BlockusTex.ASPHALT_PURPLE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_PURPLE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "red_asphalt", Crops.ASPHALT_RED, Crops.ASPHALT_RED_ITEM, new String[]{BlockusTex.ASPHALT_RED}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_RED, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "white_asphalt", Crops.ASPHALT_WHITE, Crops.ASPHALT_WHITE_ITEM, new String[]{BlockusTex.ASPHALT_WHITE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_WHITE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "yellow_asphalt", Crops.ASPHALT_YELLOW, Crops.ASPHALT_YELLOW_ITEM, new String[]{BlockusTex.ASPHALT_YELLOW}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{ASPHALT_YELLOW, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_black", Crops.SHINGLES_BLACK, Crops.SHINGLES_BLACK_ITEM, new String[]{BlockusTex.SHINGLES_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_BLACK, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_brown", Crops.SHINGLES_BROWN, Crops.SHINGLES_BROWN_ITEM, new String[]{BlockusTex.SHINGLES_BROWN}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_BROWN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_cyan", Crops.SHINGLES_CYAN, Crops.SHINGLES_CYAN_ITEM, new String[]{BlockusTex.SHINGLES_CYAN}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_CYAN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_gray", Crops.SHINGLES_GRAY, Crops.SHINGLES_GRAY_ITEM, new String[]{BlockusTex.SHINGLES_GRAY}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_GRAY, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_green", Crops.SHINGLES_GREEN, Crops.SHINGLES_GREEN_ITEM, new String[]{BlockusTex.SHINGLES_GREEN}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_GREEN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_light_blue", Crops.SHINGLES_LIGHT_BLUE, Crops.SHINGLES_LIGHT_BLUE_ITEM, new String[]{BlockusTex.SHINGLES_LIGHT_BLUE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_LIGHT_BLUE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_light_gray", Crops.SHINGLES_LIGHT_GRAY, Crops.SHINGLES_LIGHT_GRAY_ITEM, new String[]{BlockusTex.SHINGLES_LIGHT_GRAY}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_LIGHT_GRAY, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_lime", Crops.SHINGLES_LIME, Crops.SHINGLES_LIME_ITEM, new String[]{BlockusTex.SHINGLES_LIME}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_LIME, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_magenta", Crops.SHINGLES_MAGENTA, Crops.SHINGLES_MAGENTA_ITEM, new String[]{BlockusTex.SHINGLES_MAGENTA}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_MAGENTA, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_orange", Crops.SHINGLES_ORANGE, Crops.SHINGLES_ORANGE_ITEM, new String[]{BlockusTex.SHINGLES_ORANGE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_ORANGE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_pink", Crops.SHINGLES_PINK, Crops.SHINGLES_PINK_ITEM, new String[]{BlockusTex.SHINGLES_PINK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_PINK, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_purple", Crops.SHINGLES_PURPLE, Crops.SHINGLES_PURPLE_ITEM, new String[]{BlockusTex.SHINGLES_PURPLE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_PURPLE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_red", Crops.SHINGLES_RED, Crops.SHINGLES_RED_ITEM, new String[]{BlockusTex.SHINGLES_RED}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_RED, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles", Crops.SHINGLES, Crops.SHINGLES_ITEM, new String[]{BlockusTex.SHINGLES}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_white", Crops.SHINGLES_WHITE, Crops.SHINGLES_WHITE_ITEM, new String[]{BlockusTex.SHINGLES_WHITE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_WHITE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "shingles_yellow", Crops.SHINGLES_YELLOW, Crops.SHINGLES_YELLOW_ITEM, new String[]{BlockusTex.SHINGLES_YELLOW}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{SHINGLES_YELLOW, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_black", Crops.FUTURNEO_BLACK, Crops.FUTURNEO_BLACK_ITEM, new String[]{BlockusTex.FUTURNEO_BLACK, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_BLACK, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_blue", Crops.FUTURNEO_BLUE, Crops.FUTURNEO_BLUE_ITEM, new String[]{BlockusTex.FUTURNEO_BLUE, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_BLUE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_brown", Crops.FUTURNEO_BROWN, Crops.FUTURNEO_BROWN_ITEM, new String[]{BlockusTex.FUTURNEO_BROWN, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_BROWN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_cyan", Crops.FUTURNEO_CYAN, Crops.FUTURNEO_CYAN_ITEM, new String[]{BlockusTex.FUTURNEO_CYAN, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_CYAN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_gray_bright", Crops.FUTURNEO_GRAY_BRIGHT, Crops.FUTURNEO_GRAY_BRIGHT_ITEM, new String[]{BlockusTex.FUTURNEO_GRAY_BRIGHT, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_GRAY_BRIGHT, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_gray", Crops.FUTURNEO_GRAY, Crops.FUTURNEO_GRAY_ITEM, new String[]{BlockusTex.FUTURNEO_GRAY, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_GRAY, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_green", Crops.FUTURNEO_GREEN, Crops.FUTURNEO_GREEN_ITEM, new String[]{BlockusTex.FUTURNEO_GREEN, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_GREEN, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_light_blue", Crops.FUTURNEO_LIGHT_BLUE, Crops.FUTURNEO_LIGHT_BLUE_ITEM, new String[]{BlockusTex.FUTURNEO_LIGHT_BLUE, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_LIGHT_BLUE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_light_gray", Crops.FUTURNEO_LIGHT_GRAY, Crops.FUTURNEO_LIGHT_GRAY_ITEM, new String[]{BlockusTex.FUTURNEO_LIGHT_GRAY, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_LIGHT_GRAY, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_lime", Crops.FUTURNEO_LIME, Crops.FUTURNEO_LIME_ITEM, new String[]{BlockusTex.FUTURNEO_LIME, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_LIME, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_magenta", Crops.FUTURNEO_MAGENTA, Crops.FUTURNEO_MAGENTA_ITEM, new String[]{BlockusTex.FUTURNEO_MAGENTA, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_MAGENTA, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_orange", Crops.FUTURNEO_ORANGE, Crops.FUTURNEO_ORANGE_ITEM, new String[]{BlockusTex.FUTURNEO_ORANGE, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_ORANGE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_pink", Crops.FUTURNEO_PINK, Crops.FUTURNEO_PINK_ITEM, new String[]{BlockusTex.FUTURNEO_PINK, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_PINK, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_purple", Crops.FUTURNEO_PURPLE, Crops.FUTURNEO_PURPLE_ITEM, new String[]{BlockusTex.FUTURNEO_PURPLE, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_PURPLE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_red", Crops.FUTURNEO_RED, Crops.FUTURNEO_RED_ITEM, new String[]{BlockusTex.FUTURNEO_RED, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_RED, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_white", Crops.FUTURNEO_WHITE, Crops.FUTURNEO_WHITE_ITEM, new String[]{BlockusTex.FUTURNEO_WHITE, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_WHITE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "futurneo_yellow", Crops.FUTURNEO_YELLOW, Crops.FUTURNEO_YELLOW_ITEM, new String[]{BlockusTex.FUTURNEO_YELLOW, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{FUTURNEO_YELLOW, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "bluestone", Crops.BLUESTONE, Crops.BLUESTONE_ITEM, new String[]{BlockusTex.BLUESTONE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{BLUESTONE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "glowing_obsidian", Crops.GLOWING_OBSIDIAN, Crops.GLOWING_OBSIDIAN_ITEM, new String[]{BlockusTex.GLOWING_OBSIDIAN,ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{GLOWING_OBSIDIAN, Strings.Tier3}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_bricks", Crops.LEGACY_BRICKS, Crops.LEGACY_BRICKS_ITEM, new String[]{BlockusTex.LEGACY_BRICKS}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_BRICKS, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_coal_block", Crops.LEGACY_COAL_BLOCK, Crops.LEGACY_COAL_BLOCK_ITEM, new String[]{BlockusTex.LEGACY_COAL_BLOCK, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_COAL_BLOCK, Strings.Tier2}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_cobblestone", Crops.LEGACY_COBBLESTONE, Crops.LEGACY_COBBLESTONE_ITEM, new String[]{BlockusTex.LEGACY_COBBLESTONE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_COBBLESTONE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_crying_obsidian", Crops.LEGACY_CRYING_OBSIDIAN, Crops.LEGACY_CRYING_OBSIDIAN_ITEM, new String[]{BlockusTex.LEGACY_CRYING_OBSIDIAN}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_CRYING_OBSIDIAN, Strings.Tier3}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_diamond_block", Crops.LEGACY_DIAMOND_BLOCK, Crops.LEGACY_DIAMOND_BLOCK_ITEM, new String[]{BlockusTex.LEGACY_DIAMOND_BLOCK}, CropModelTypes.LOG, new Boolean[]{true,false}, new String[]{LEGACY_DIAMOND_BLOCK, Strings.Tier5}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_explosion_proof_gold_block", Crops.LEGACY_EXPLOSION_PROOF_GOLD_BLOCK, Crops.LEGACY_EXPLOSION_PROOF_GOLD_BLOCK_ITEM, new String[]{BlockusTex.LEGACY_EXPLOSION_PROOF_GOLD_BLOCK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_EXPLOSION_PROOF_GOLD_BLOCK, Strings.Tier4}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_first_cobblestone", Crops.LEGACY_FIRST_COBBLESTONE, Crops.LEGACY_FIRST_COBBLESTONE_ITEM, new String[]{BlockusTex.LEGACY_FIRST_COBBLESTONE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_FIRST_COBBLESTONE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_first_grass_block", Crops.LEGACY_FIRST_GRASS_BLOCK, Crops.LEGACY_FIRST_GRASS_BLOCK_ITEM, new String[]{BlockusTex.LEGACY_FIRST_GRASS_BLOCK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_FIRST_GRASS_BLOCK, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_glowing_obsidian", Crops.LEGACY_GLOWING_OBSIDIAN, Crops.LEGACY_GLOWING_OBSIDIAN_ITEM, new String[]{BlockusTex.LEGACY_GLOWING_OBSIDIAN,ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_GLOWING_OBSIDIAN, Strings.Tier3}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_glowstone", Crops.LEGACY_GLOWSTONE, Crops.LEGACY_GLOWSTONE_ITEM, new String[]{BlockusTex.LEGACY_GLOWSTONE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_GLOWSTONE, Strings.Tier3}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_gold_block", Crops.LEGACY_GOLD_BLOCK, Crops.LEGACY_GOLD_BLOCK_ITEM, new String[]{BlockusTex.LEGACY_GOLD_BLOCK}, CropModelTypes.LOG, new Boolean[]{true,false}, new String[]{LEGACY_GOLD_BLOCK, Strings.Tier4}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_grass_block", Crops.LEGACY_GRASS_BLOCK, Crops.LEGACY_GRASS_BLOCK_ITEM, new String[]{BlockusTex.LEGACY_GRASS_BLOCK}, CropModelTypes.LOG, new Boolean[]{true,false}, new String[]{LEGACY_GRASS_BLOCK, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_gravel", Crops.LEGACY_GRAVEL, Crops.LEGACY_GRAVEL_ITEM, new String[]{BlockusTex.LEGACY_GRAVEL}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_GRAVEL, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_iron_block", Crops.LEGACY_IRON_BLOCK, Crops.LEGACY_IRON_BLOCK_ITEM, new String[]{BlockusTex.LEGACY_IRON_BLOCK}, CropModelTypes.LOG, new Boolean[]{true,false}, new String[]{LEGACY_IRON_BLOCK, Strings.Tier3}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_lapis_block", Crops.LEGACY_LAPIS_BLOCK, Crops.LEGACY_LAPIS_BLOCK_ITEM, new String[]{BlockusTex.LEGACY_LAPIS_BLOCK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_LAPIS_BLOCK, Strings.Tier4}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_leaves", Crops.LEGACY_LEAVES, Crops.LEGACY_LEAVES_ITEM, new String[]{BlockusTex.LEGACY_LEAVES}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_LEAVES, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_mossy_cobblestone", Crops.LEGACY_MOSSY_COBBLESTONE, Crops.LEGACY_MOSSY_COBBLESTONE_ITEM, new String[]{BlockusTex.LEGACY_MOSSY_COBBLESTONE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_MOSSY_COBBLESTONE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_nether_reactor_core", Crops.LEGACY_NETHER_REACTOR_CORE, Crops.LEGACY_NETHER_REACTOR_CORE_ITEM, new String[]{BlockusTex.LEGACY_NETHER_REACTOR_CORE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_NETHER_REACTOR_CORE, Strings.Tier5}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_planks", Crops.LEGACY_PLANKS, Crops.LEGACY_PLANKS_ITEM, new String[]{BlockusTex.LEGACY_PLANKS}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_PLANKS, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "legacy_sponge", Crops.LEGACY_SPONGE, Crops.LEGACY_SPONGE_ITEM, new String[]{BlockusTex.LEGACY_SPONGE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LEGACY_SPONGE, Strings.Tier1}, true);
			RegisterCrop.addCrop(Mods.Blockus, "limestone", Crops.LIMESTONE, Crops.LIMESTONE_ITEM, new String[]{BlockusTex.LIMESTONE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{LIMESTONE, Strings.Tier2}, true);
			RegisterCrop.addCrop(Mods.Blockus, "marble", Crops.MARBLE, Crops.MARBLE_ITEM, new String[]{BlockusTex.MARBLE}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{MARBLE, Strings.Tier3}, true);
			RegisterCrop.addCrop(Mods.Blockus, "rainbow_block", Crops.RAINBOW_BLOCK, Crops.RAINBOW_BLOCK_ITEM, new String[]{BlockusTex.RAINBOW_BLOCK}, CropModelTypes.RADIAL_CENTER, new Boolean[]{true,false}, new String[]{RAINBOW_BLOCK, Strings.Tier5}, true);
			RegisterCrop.addCrop(Mods.Blockus, "redstone_sand", Crops.REDSTONE_SAND, Crops.REDSTONE_SAND_ITEM, new String[]{BlockusTex.REDSTONE_SAND}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{REDSTONE_SAND, Strings.Tier3}, true);
			RegisterCrop.addCrop(Mods.Blockus, "stars_block", Crops.STARS_BLOCK, Crops.STARS_BLOCK_ITEM, new String[]{BlockusTex.STARS_BLOCK, ResourceCropsTex.GRADIENT_BLACK}, CropModelTypes.ALL, new Boolean[]{true,false}, new String[]{STARS_BLOCK, Strings.Tier5}, true);
			RegisterCrop.addCrop(Mods.Blockus, "white_oak_log", Crops.LOG_WHITE_OAK, Crops.LOG_WHITE_OAK_ITEM, new String[]{BlockusTex.LOG_WHITE_OAK}, CropModelTypes.LOG, new Boolean[]{true,false}, new String[]{LOG_WHITE_OAK, Strings.Tier1}, true);
		}
	}
}
